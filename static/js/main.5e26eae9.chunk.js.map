{"version":3,"sources":["reducers/products.ts","reducers/categories.ts","reducers/settings.ts","reducers/cart.ts","store.ts","components/Product/ProductCard.tsx","components/Product/ProductGrid.tsx","views/Home.tsx","container/CategoryList.tsx","selectors/index.ts","container/CategoryDetail.tsx","views/CategoryView.tsx","container/ProductList.tsx","components/Product/CategoryLink.tsx","components/Product/FavouriteButton.tsx","components/Product/Comments.tsx","components/Toast.tsx","container/ProductDetail.tsx","views/ProductView.tsx","components/Menu/MenuBar.tsx","components/Menu/LeftMenu.tsx","components/Menu/LoginDialog.tsx","views/Cart.tsx","App.tsx","theme.ts","serviceWorker.ts","index.tsx"],"names":["INIT_PRODUCTS","initialState","products","sampleProducts","id","name","price","categoryId","slug","thumbnail","shuffle","array","copy","i","length","j","Math","floor","random","state","action","type","INIT_CATEGORIES","categories","sampleCategories","LOGIN","LOGOUT","SHOW_DRAWER","HIDE_DRAWER","SHOW_LOGIN","HIDE_LOGIN","authed","showDrawer","showLogin","settings","Object","assign","payload","ADD_TO_CART","REMOVE_FROM_CART","items","cart","itemToAdd","findIndex","item","productId","newState","quantity","otherItems","filter","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","useStyles","makeStyles","root","maxWidth","media","height","ProductCard","props","classes","product","Card","className","square","CardActionArea","CardMedia","image","title","CardContent","Grid","container","direction","justifyContent","alignItems","Typography","gutterBottom","variant","component","color","CardActions","Button","size","fullWidth","to","ProductGrid","Box","my","spacing","map","xs","sm","align","connect","Container","List","category","index","ListItem","button","divider","ListItemAvatar","Avatar","alt","src","ListItemText","primary","getProductById","find","getProductsByCategoryId","getCategoryById","getCartItems","currentProduct","ownProps","match","params","CategoryView","path","CategoryDetail","exact","CategoryList","display","Fragment","FavouriteButton","useState","liked","setLiked","onClick","Comments","comments","comment","message","secondary","Toast","Snackbar","open","autoHideDuration","onClose","Alert","severity","sampleComments","avatar","dispatch","addToCart","rating","setRating","count","setCount","setOpen","useEffect","Rating","defaultValue","precision","readOnly","Divider","event","reason","ProductView","ProductDetail","ProductList","theme","flexGrow","menuButton","marginRight","logout","openDrawer","openLogin","AppBar","Toolbar","IconButton","edge","Menu","list","width","fullList","toolbar","mixins","cartCount","toggleOn","toggleOff","toggleDrawer","key","Drawer","role","onKeyDown","ListItemIcon","Shop","LocalOffer","Badge","badgeContent","ShoppingCart","login","show","hide","setName","handleClose","Dialog","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","label","onChange","target","value","DialogActions","table","minWidth","maxHeight","removeFromCart","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","scope","colSpan","appBarSpacer","initProducts","initCategories","Cart","createTheme","palette","main","error","red","A400","background","default","Boolean","location","hostname","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.5e26eae9.chunk.js","sourcesContent":["import { Category } from \"./categories\";\r\nimport { AnyAction } from \"redux\";\r\n// import type { RootState } from \"../store\";\r\n\r\n// actions\r\nexport const INIT_PRODUCTS = \"INIT_PRODUCTS\";\r\n\r\nexport interface Product {\r\n  id: string;\r\n  name: string;\r\n  price: number;\r\n  categoryId: string;\r\n  slug: string;\r\n  thumbnail: string;\r\n}\r\n\r\nexport interface ProductWithCategory extends Product {\r\n  category?: Category;\r\n}\r\n\r\ninterface ProductState {\r\n  products: Product[];\r\n}\r\n\r\nconst initialState: ProductState = {\r\n  products: [],\r\n};\r\n\r\nconst sampleProducts: Product[] = [\r\n  {\r\n    id: \"1\",\r\n    name: \"Animal 1\",\r\n    price: 100,\r\n    categoryId: \"1\",\r\n    slug: \"animal-1\",\r\n    thumbnail: \"https://placeimg.com/320/240/animals\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    name: \"Animal 2\",\r\n    price: 200,\r\n    categoryId: \"1\",\r\n    slug: \"animal-2\",\r\n    thumbnail: \"https://placeimg.com/320/240/animals\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    name: \"Animal 3\",\r\n    price: 300,\r\n    categoryId: \"1\",\r\n    slug: \"animal-3\",\r\n    thumbnail: \"https://placeimg.com/320/240/animals\",\r\n  },\r\n  {\r\n    id: \"4\",\r\n    name: \"Arch 1\",\r\n    price: 100,\r\n    categoryId: \"2\",\r\n    slug: \"arch-1\",\r\n    thumbnail: \"https://placeimg.com/320/240/arch\",\r\n  },\r\n  {\r\n    id: \"5\",\r\n    name: \"Arch 2\",\r\n    price: 200,\r\n    categoryId: \"2\",\r\n    slug: \"arch-2\",\r\n    thumbnail: \"https://placeimg.com/320/240/arch\",\r\n  },\r\n  {\r\n    id: \"6\",\r\n    name: \"Arch 3\",\r\n    price: 300,\r\n    categoryId: \"2\",\r\n    slug: \"arch-3\",\r\n    thumbnail: \"https://placeimg.com/320/240/arch\",\r\n  },\r\n  {\r\n    id: \"7\",\r\n    name: \"Nature 1\",\r\n    price: 100,\r\n    categoryId: \"3\",\r\n    slug: \"nature-1\",\r\n    thumbnail: \"https://placeimg.com/320/240/nature\",\r\n  },\r\n  {\r\n    id: \"8\",\r\n    name: \"Nature 2\",\r\n    price: 200,\r\n    categoryId: \"3\",\r\n    slug: \"nature-2\",\r\n    thumbnail: \"https://placeimg.com/320/240/nature\",\r\n  },\r\n  {\r\n    id: \"9\",\r\n    name: \"Nature 3\",\r\n    price: 300,\r\n    categoryId: \"3\",\r\n    slug: \"nature-3\",\r\n    thumbnail: \"https://placeimg.com/320/240/nature\",\r\n  },\r\n  {\r\n    id: \"10\",\r\n    name: \"People 1\",\r\n    price: 100,\r\n    categoryId: \"4\",\r\n    slug: \"people-1\",\r\n    thumbnail: \"https://placeimg.com/320/240/people\",\r\n  },\r\n  {\r\n    id: \"11\",\r\n    name: \"People 2\",\r\n    price: 200,\r\n    categoryId: \"4\",\r\n    slug: \"people-2\",\r\n    thumbnail: \"https://placeimg.com/320/240/people\",\r\n  },\r\n  {\r\n    id: \"12\",\r\n    name: \"People 3\",\r\n    price: 300,\r\n    categoryId: \"4\",\r\n    slug: \"people-3\",\r\n    thumbnail: \"https://placeimg.com/320/240/people\",\r\n  },\r\n  {\r\n    id: \"13\",\r\n    name: \"Tech 1\",\r\n    price: 100,\r\n    categoryId: \"5\",\r\n    slug: \"tech-1\",\r\n    thumbnail: \"https://placeimg.com/320/240/tech\",\r\n  },\r\n  {\r\n    id: \"14\",\r\n    name: \"Tech 2\",\r\n    price: 200,\r\n    categoryId: \"5\",\r\n    slug: \"tech-2\",\r\n    thumbnail: \"https://placeimg.com/320/240/tech\",\r\n  },\r\n  {\r\n    id: \"15\",\r\n    name: \"Tech 3\",\r\n    price: 300,\r\n    categoryId: \"5\",\r\n    slug: \"tech-3\",\r\n    thumbnail: \"https://placeimg.com/320/240/tech\",\r\n  },\r\n];\r\n\r\n// handy method to shuffle an array using Fisher-Yates algorithm\r\nconst shuffle = (array: Product[]) => {\r\n  const copy = [...array];\r\n  for (let i = copy.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [copy[i], copy[j]] = [copy[j], copy[i]];\r\n  }\r\n  return copy;\r\n};\r\n\r\nconst products = (\r\n  state: ProductState = initialState,\r\n  action: AnyAction\r\n): ProductState => {\r\n  switch (action.type) {\r\n    case INIT_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: shuffle(sampleProducts),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Selector\r\n// export const selectSetting = (state: RootState) => state;\r\n\r\nexport default products;\r\n","import { AnyAction } from \"redux\";\r\n// import type { RootState } from \"../store\";\r\n\r\n// actions\r\nexport const INIT_CATEGORIES = \"INIT_CATEGORIES\";\r\n\r\nexport interface Category {\r\n  id: string;\r\n  name: string;\r\n  slug: string;\r\n  thumbnail: string;\r\n}\r\n\r\ninterface CategoryState {\r\n  categories: Category[];\r\n}\r\n\r\nconst initialState: CategoryState = {\r\n  categories: [],\r\n};\r\n\r\nconst sampleCategories: Category[] = [\r\n  {\r\n    id: \"1\",\r\n    name: \"Animal\",\r\n    slug: \"animal\",\r\n    thumbnail: \"https://placeimg.com/100/100/animals\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    name: \"Arch\",\r\n    slug: \"arch\",\r\n    thumbnail: \"https://placeimg.com/100/100/arch\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    name: \"Nature\",\r\n    slug: \"nature\",\r\n    thumbnail: \"https://placeimg.com/100/100/nature\",\r\n  },\r\n  {\r\n    id: \"4\",\r\n    name: \"People\",\r\n    slug: \"people\",\r\n    thumbnail: \"https://placeimg.com/100/100/people\",\r\n  },\r\n  {\r\n    id: \"5\",\r\n    name: \"Tech\",\r\n    slug: \"tech\",\r\n    thumbnail: \"https://placeimg.com/100/100/tech\",\r\n  },\r\n];\r\n\r\nconst categories = (state: CategoryState = initialState, action: AnyAction) => {\r\n  switch (action.type) {\r\n    case INIT_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        categories: sampleCategories,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Selector\r\n// export const selectSetting = (state: RootState) => state;\r\n\r\nexport default categories;\r\n","import { AnyAction } from \"redux\";\r\nimport type { RootState } from \"../store\";\r\n\r\n// actions\r\nexport const LOGIN = \"LOGIN\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const SHOW_DRAWER = \"SHOW_DRAWER\";\r\nexport const HIDE_DRAWER = \"HIDE_DRAWER\";\r\nexport const SHOW_LOGIN = \"SHOW_LOGIN\";\r\nexport const HIDE_LOGIN = \"HIDE_LOGIN\";\r\n\r\ninterface SettingState {\r\n  authed: boolean;\r\n  name: string;\r\n  showDrawer: boolean;\r\n  showLogin: boolean;\r\n}\r\n\r\nconst initialState: SettingState = {\r\n  authed: false,\r\n  name: \"\",\r\n  showDrawer: false,\r\n  showLogin: false,\r\n};\r\n\r\nconst settings = (state: SettingState = initialState, action: AnyAction) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      return Object.assign({}, state, {\r\n        authed: true,\r\n        name: action.payload,\r\n      });\r\n    case LOGOUT:\r\n      return Object.assign({}, state, {\r\n        authed: false,\r\n        name: \"\",\r\n      });\r\n    case SHOW_DRAWER:\r\n      return Object.assign({}, state, {\r\n        showDrawer: true,\r\n      });\r\n    case HIDE_DRAWER:\r\n      return Object.assign({}, state, {\r\n        showDrawer: false,\r\n      });\r\n    case SHOW_LOGIN:\r\n      return Object.assign({}, state, {\r\n        showLogin: true,\r\n      });\r\n    case HIDE_LOGIN:\r\n      return Object.assign({}, state, {\r\n        showLogin: false,\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Selector\r\nexport const selectSetting = (state: RootState) => state;\r\n\r\nexport default settings;\r\n","import { Product } from \"./products\";\r\nimport { AnyAction } from \"redux\";\r\n\r\n// actions\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\n\r\nexport interface CartItem {\r\n  productId: string;\r\n  quantity: number;\r\n}\r\nexport interface CartProduct extends CartItem {\r\n  product: Product | undefined;\r\n}\r\n\r\ninterface CartState {\r\n  items: CartItem[];\r\n}\r\n\r\nconst initialState: CartState = {\r\n  items: [],\r\n};\r\n\r\nconst cart = (state: CartState = initialState, action: AnyAction) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      const itemToAdd = state.items.findIndex((item) => {\r\n        return item.productId === action.id;\r\n      });\r\n      if (itemToAdd > -1) {\r\n        let newState = [...state.items];\r\n        newState[itemToAdd].quantity += 1;\r\n\r\n        return {\r\n          ...state,\r\n          items: newState,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        items: [\r\n          ...state.items,\r\n          {\r\n            productId: action.id,\r\n            quantity: 1,\r\n          },\r\n        ],\r\n      };\r\n    case REMOVE_FROM_CART:\r\n      const otherItems = state.items.filter(\r\n        (item) => item.productId !== action.id\r\n      );\r\n      return {\r\n        ...state,\r\n        items: otherItems,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cart;\r\n","import { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport products from \"./reducers/products\";\nimport categories from \"./reducers/categories\";\nimport settings from \"./reducers/settings\";\nimport cart from \"./reducers/cart\";\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst rootReducer = combineReducers({ products, categories, settings, cart });\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware()));\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n// export type AppThunk<ReturnType = void> = ThunkAction<\n//   ReturnType,\n//   RootState,\n//   unknown,\n//   Action<string>\n// >;\n\nexport default store;\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Product } from \"../../reducers/products\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\ninterface Props {\r\n  product: Product;\r\n}\r\n\r\nconst ProductCard = (props: Props) => {\r\n  const classes = useStyles();\r\n  const { product } = props;\r\n\r\n  return (\r\n    <Card className={classes.root} square={false}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={product.thumbnail}\r\n          title={product.name}\r\n        />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Typography gutterBottom variant=\"body1\" component=\"h4\">\r\n                {product.name}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                ${product.price}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"medium\" fullWidth color=\"primary\">\r\n          <Link to={`/products/${product.id}`}>Learn More</Link>\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid, Box } from \"@material-ui/core\";\r\nimport { Product } from \"../../reducers/products\";\r\nimport ProductCard from \"./ProductCard\";\r\n\r\ninterface Props {\r\n  products: Product[];\r\n  title?: string;\r\n}\r\n\r\nconst ProductGrid = (props: Props) => {\r\n  const { products } = props;\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\">\r\n        {props.title ? props.title : \"Product List\"}\r\n      </Typography>\r\n      <Box my={2}>\r\n        {products && products.length > 0 ? (\r\n          <Grid container spacing={3}>\r\n            {products.map((product) => {\r\n              return (\r\n                <Grid item xs={6} sm={3} key={product.id}>\r\n                  <ProductCard product={product} />\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        ) : (\r\n          <Typography variant=\"h6\" align=\"center\">\r\n            No Products yet :(\r\n          </Typography>\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductGrid;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Box, Container } from \"@material-ui/core\";\r\nimport ProductGrid from \"../components/Product/ProductGrid\";\r\nimport { RootState } from \"../store\";\r\nimport { Product } from \"../reducers/products\";\r\n\r\nconst mapState = (state: RootState) => {\r\n  return {\r\n    products: state.products.products,\r\n  };\r\n};\r\n\r\ninterface Props {\r\n  products: Product[];\r\n}\r\n\r\nconst Home = (props: Props) => {\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Box my={4}>\r\n        <ProductGrid products={props.products} />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default connect(mapState)(Home);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport type { Category } from \"../reducers/categories\";\r\nimport { RootState } from \"../store\";\r\n\r\nconst mapState = (state: RootState) => {\r\n  return {\r\n    categories: state.categories.categories,\r\n  };\r\n};\r\n\r\ninterface Props {\r\n  categories: Category[];\r\n}\r\n\r\nconst CategoryList = (props: Props) => {\r\n  const { categories } = props;\r\n\r\n  return (\r\n    <Box my={4}>\r\n      <Typography variant=\"h5\">Categories</Typography>\r\n      <Box my={2}>\r\n        <List component=\"nav\" aria-label=\"categories\">\r\n          {(categories && categories.length) > 0 ? (\r\n            categories.map((category, index) => {\r\n              return (\r\n                <ListItem\r\n                  button\r\n                  divider={index < categories.length - 1}\r\n                  key={category.slug}\r\n                >\r\n                  <ListItemAvatar>\r\n                    <Avatar alt={category.name} src={category.thumbnail} />\r\n                  </ListItemAvatar>\r\n                  <Link to={`/categories/${category.id}`}>\r\n                    <ListItemText primary={category.name} />\r\n                  </Link>\r\n                </ListItem>\r\n              );\r\n            })\r\n          ) : (\r\n            <Typography variant=\"h6\" align=\"center\">\r\n              Loading...\r\n            </Typography>\r\n          )}\r\n        </List>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default connect(mapState)(CategoryList);\r\n","// import { createSelector } from \"reselect\";\r\nimport { RootState } from \"../store\";\r\nimport { ProductWithCategory } from \"../reducers/products\";\r\nimport { CartProduct } from \"../reducers/cart\";\r\n\r\nexport const getAllProducts = (state: RootState) => state.products.products;\r\n\r\nexport const getProductById = (state: RootState, id: string) => {\r\n  return state.products.products.find((product) => {\r\n    return product.id === id;\r\n  });\r\n};\r\n\r\nexport const getProductWithCategoryById = (state: RootState, id: string) => {\r\n  const thisProduct:\r\n    | ProductWithCategory\r\n    | undefined = state.products.products.find((product) => {\r\n    return product.id === id;\r\n  });\r\n  if (!thisProduct) {\r\n    return null;\r\n  }\r\n  const thisCategory = state.categories.categories.find((category) => {\r\n    return category.id === id;\r\n  });\r\n  if (!thisCategory) {\r\n    return thisProduct;\r\n  }\r\n  thisProduct.category = thisCategory;\r\n  return thisProduct;\r\n};\r\n\r\nexport const getProductsByCategoryId = (state: RootState, id: string) => {\r\n  return state.products.products.filter((product) => {\r\n    return product.categoryId === id;\r\n  });\r\n};\r\n\r\nexport const getAllCategories = (state: RootState) => {\r\n  return state.categories.categories;\r\n};\r\n\r\nexport const getCategoryById = (state: RootState, id: string) => {\r\n  return state.categories.categories.find((category) => {\r\n    return category.id === id;\r\n  });\r\n};\r\n\r\nexport const getCartItems = (state: RootState) => {\r\n  const items = [...state.cart.items] as CartProduct[];\r\n  // TODO: use lodash keyBy\r\n  const products = state.products.products;\r\n  return items.map((item) => {\r\n    const currentProduct = products.find((product) => {\r\n      return product.id === item.productId;\r\n    });\r\n    item.product = currentProduct;\r\n    return item;\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { getCategoryById, getProductsByCategoryId } from \"../selectors\";\r\nimport { RootState } from \"../store\";\r\nimport { Product } from \"../reducers/products\";\r\nimport { Category } from \"../reducers/categories\";\r\nimport ProductGrid from \"../components/Product/ProductGrid\";\r\n\r\ntype OwnProps = { id: string };\r\n\r\nconst mapState = (\r\n  state: RootState,\r\n  ownProps: RouteComponentProps<OwnProps>\r\n) => {\r\n  return {\r\n    category: getCategoryById(state, ownProps.match.params.id),\r\n    products: getProductsByCategoryId(state, ownProps.match.params.id),\r\n  };\r\n};\r\n\r\ninterface Props extends OwnProps {\r\n  category: Category | undefined;\r\n  products: Product[];\r\n}\r\n\r\nconst CategoryDetail = (props: Props) => {\r\n  const { category, products } = props;\r\n  if (!category || !products) {\r\n    return (\r\n      <Box my={2}>\r\n        <div>Something went wrong...</div>;\r\n      </Box>\r\n    );\r\n  }\r\n  return (\r\n    <Box my={2}>\r\n      {products.length && (\r\n        <ProductGrid products={props.products} title={category.name} />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default connect(mapState)(CategoryDetail);\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport CategoryList from \"../container/CategoryList\";\r\nimport CategoryDetail from \"../container/CategoryDetail\";\r\n\r\nconst CategoryView = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/categories/:id\" component={CategoryDetail} />\r\n        <Route path=\"/categories\" exact component={CategoryList} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default CategoryView;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport ProductGrid from \"../components/Product/ProductGrid\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { RootState } from \"../store\";\r\nimport { Product } from \"../reducers/products\";\r\n\r\nconst mapState = (state: RootState) => {\r\n  return {\r\n    products: state.products.products,\r\n  };\r\n};\r\n\r\ninterface Props {\r\n  products: Product[];\r\n}\r\n\r\nconst ProductList = (props: Props) => {\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Box my={4}>\r\n        <ProductGrid products={props.products} />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default connect(mapState)(ProductList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport { getCategoryById } from \"../../selectors\";\r\nimport { RootState } from \"../../store\";\r\nimport { Category } from \"../../reducers/categories\";\r\n\r\ntype OwnProps = { id: string };\r\n\r\nconst mapState = (state: RootState, ownProps: OwnProps) => {\r\n  return {\r\n    category: getCategoryById(state, ownProps.id),\r\n  };\r\n};\r\n\r\ninterface Props extends OwnProps {\r\n  category: Category | undefined;\r\n}\r\n\r\nconst CategoryLink = (props: Props) => {\r\n  const { category } = props;\r\n  return category ? (\r\n    <Box my={2}>\r\n      <div>\r\n        <Typography gutterBottom variant=\"body1\" display=\"inline\">\r\n          Category:\r\n        </Typography>\r\n        &nbsp;\r\n        <Link to={`/categories/${category.id}`}>{category.name}</Link>\r\n      </div>\r\n    </Box>\r\n  ) : (\r\n    <React.Fragment />\r\n  );\r\n};\r\n\r\nexport default connect(mapState)(CategoryLink);\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\n\r\nconst FavouriteButton = () => {\r\n  const [liked, setLiked] = useState(false);\r\n\r\n  const toggleLiked = () => {\r\n    setLiked(!liked);\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      variant=\"outlined\"\r\n      size=\"small\"\r\n      color=\"secondary\"\r\n      onClick={toggleLiked}\r\n    >\r\n      {liked ? <FavoriteIcon /> : <FavoriteBorderIcon />}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default FavouriteButton;\r\n","import Box from \"@material-ui/core/Box\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\n\r\nexport interface IComment {\r\n  avatar: string;\r\n  name: string;\r\n  message: string;\r\n}\r\n\r\nexport interface CommentProps {\r\n  comments: IComment[];\r\n}\r\n\r\nconst Comments = (props: CommentProps) => {\r\n  const { comments } = props;\r\n  return (\r\n    <Box my={2}>\r\n      <Typography gutterBottom variant=\"body1\" component=\"div\">\r\n        Comments\r\n      </Typography>\r\n      <List>\r\n        {comments.map((comment, index) => {\r\n          return (\r\n            <ListItem key={`${comment.name}_${index}`}>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <AccountCircleIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={comment.message}\r\n                secondary={comment.name}\r\n              />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  onClose(): void;\r\n  message: string;\r\n  duration?: number;\r\n}\r\n\r\nconst Toast = (props: Props) => {\r\n  return (\r\n    <Snackbar open={props.open} autoHideDuration={2000} onClose={props.onClose}>\r\n      <Alert onClose={props.onClose} severity=\"success\">\r\n        {props.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default Toast;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { Dispatch } from \"redux\";\r\nimport { getProductById } from \"../selectors\";\r\nimport { RootState } from \"../store\";\r\nimport { Product } from \"../reducers/products\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Divider,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport CategoryLink from \"../components/Product/CategoryLink\";\r\nimport FavouriteButton from \"../components/Product/FavouriteButton\";\r\nimport Comments, { IComment } from \"../components/Product/Comments\";\r\nimport { ADD_TO_CART } from \"../reducers/cart\";\r\nimport Toast from \"../components/Toast\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 200,\r\n  },\r\n});\r\n\r\ntype OwnProps = { id: string };\r\n\r\nconst mapState = (\r\n  state: RootState,\r\n  ownProps: RouteComponentProps<OwnProps>\r\n) => {\r\n  return {\r\n    product: getProductById(state, ownProps.match.params.id),\r\n  };\r\n};\r\n\r\nconst mapDispatch = (dispatch: Dispatch) => {\r\n  return {\r\n    addToCart: (id: string) => dispatch({ type: ADD_TO_CART, id }),\r\n  };\r\n};\r\n\r\ninterface Props extends OwnProps {\r\n  product: Product | undefined;\r\n  addToCart: (arg0: string) => void;\r\n}\r\n\r\nconst sampleComments: IComment[] = [\r\n  {\r\n    avatar: \"1\",\r\n    name: \"Anonymous\",\r\n    message: \"Good\",\r\n  },\r\n  {\r\n    avatar: \"2\",\r\n    name: \"Anonymous\",\r\n    message: \"Nice\",\r\n  },\r\n  {\r\n    avatar: \"3\",\r\n    name: \"Anonymous\",\r\n    message: \"Very Good!\",\r\n  },\r\n];\r\n\r\nconst ProductDetail = (props: Props) => {\r\n  const classes = useStyles();\r\n  const { product } = props;\r\n  const [rating, setRating] = useState(0);\r\n  const [count, setCount] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClick = (id: string) => {\r\n    props.addToCart(id);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleToastClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setRating(Math.floor(Math.random() * 5));\r\n    setCount(Math.floor(Math.random() * 90) + 10);\r\n  }, []);\r\n\r\n  if (!product) {\r\n    return (\r\n      <Box my={2}>\r\n        <div>Something went wrong...</div>\r\n      </Box>\r\n    );\r\n  }\r\n  return (\r\n    <Box my={2}>\r\n      <Card square={false}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={product.thumbnail}\r\n          title={product.name}\r\n        />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Typography gutterBottom variant=\"h6\" component=\"h4\">\r\n                {product.name}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                ${product.price}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Grid container direction=\"row\" alignItems=\"center\">\r\n                <Grid item>\r\n                  <Rating\r\n                    name=\"half-rating-read\"\r\n                    defaultValue={rating}\r\n                    precision={0.5}\r\n                    readOnly\r\n                  />\r\n                </Grid>\r\n                <Grid item>({count})</Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <FavouriteButton />\r\n            </Grid>\r\n          </Grid>\r\n          <Box my={2}>\r\n            <Button\r\n              fullWidth\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                handleClick(product.id);\r\n              }}\r\n            >\r\n              Add to cart\r\n            </Button>\r\n          </Box>\r\n          <Divider />\r\n          {product.categoryId && <CategoryLink id={product.categoryId} />}\r\n          {sampleComments && <Comments comments={sampleComments} />}\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n      </Card>\r\n      <Toast\r\n        open={open}\r\n        onClose={handleToastClose}\r\n        message=\"Item added to cart\"\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(ProductDetail);\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport ProductList from \"../container/ProductList\";\r\nimport ProductDetail from \"../container/ProductDetail\";\r\n\r\nconst ProductView = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/products/:id\" component={ProductDetail} />\r\n        <Route path=\"/products\" exact component={ProductList} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default ProductView;\r\n","import React, { useState } from \"react\";\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  AppBar,\r\n  Button,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { Menu } from \"@material-ui/icons\";\r\nimport type { RootState } from \"../../store\";\r\nimport { LOGOUT, SHOW_DRAWER, SHOW_LOGIN } from \"../../reducers/settings\";\r\nimport Toast from \"../Toast\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst mapState = (state: RootState) => {\r\n  return {\r\n    authed: state.settings.authed,\r\n    name: state.settings.name,\r\n  };\r\n};\r\n\r\nconst mapDispatch = (dispatch: Dispatch) => {\r\n  return {\r\n    logout: () => dispatch({ type: LOGOUT }),\r\n    openDrawer: () => dispatch({ type: SHOW_DRAWER }),\r\n    openLogin: () => dispatch({ type: SHOW_LOGIN }),\r\n  };\r\n};\r\n\r\ninterface Props {\r\n  authed: boolean;\r\n  name: string;\r\n  logout: () => void;\r\n  openDrawer: () => void;\r\n  openLogin: () => void;\r\n}\r\n\r\nconst MenuBar = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleLogin = () => {\r\n    props.openLogin();\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    props.logout();\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleToastClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => {\r\n              props.openDrawer();\r\n            }}\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Shopping cart\r\n          </Typography>\r\n          {props.authed ? (\r\n            <Button color=\"inherit\" onClick={handleLogout}>\r\n              Logout\r\n            </Button>\r\n          ) : (\r\n            <Button color=\"inherit\" onClick={handleLogin}>\r\n              Login\r\n            </Button>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Toast\r\n        open={open}\r\n        onClose={handleToastClose}\r\n        message=\"Logout successfully\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(MenuBar);\r\n","import React from \"react\";\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Divider, Typography, Drawer, Badge } from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { RootState } from \"../../store\";\r\nimport { SHOW_DRAWER, HIDE_DRAWER } from \"../../reducers/settings\";\r\nimport { Home, Shop, LocalOffer, ShoppingCart } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n}));\r\n\r\nconst mapState = (state: RootState) => {\r\n  return {\r\n    showDrawer: state.settings.showDrawer,\r\n    cartCount: state.cart.items.length,\r\n  };\r\n};\r\n\r\nconst mapDispatch = (dispatch: Dispatch) => {\r\n  return {\r\n    toggleOn: () => dispatch({ type: SHOW_DRAWER }),\r\n    toggleOff: () => dispatch({ type: HIDE_DRAWER }),\r\n  };\r\n};\r\n\r\ninterface Props {\r\n  showDrawer: boolean;\r\n  cartCount: number;\r\n  toggleOn: () => void;\r\n  toggleOff: () => void;\r\n}\r\n\r\nconst LeftMenu = (props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  const toggleDrawer = (open: boolean) => (\r\n    event: React.KeyboardEvent | React.MouseEvent\r\n  ) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      ((event as React.KeyboardEvent).key === \"Tab\" ||\r\n        (event as React.KeyboardEvent).key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (open) {\r\n      props.toggleOn();\r\n    } else {\r\n      props.toggleOff();\r\n    }\r\n  };\r\n\r\n  const list = () => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(false)}\r\n      onKeyDown={toggleDrawer(false)}\r\n    >\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        className={classes.toolbar}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h5\">Shopping cart</Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Divider />\r\n      <List>\r\n        <Link to=\"/\">\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <Home />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Home\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/products\">\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <Shop />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Products\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/categories\">\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <LocalOffer />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Categories\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/carts\">\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <Badge badgeContent={props.cartCount} color=\"secondary\">\r\n                <ShoppingCart />\r\n              </Badge>\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Cart\" />\r\n          </ListItem>\r\n        </Link>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Drawer open={props.showDrawer} onClose={toggleDrawer(false)}>\r\n        {list()}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(LeftMenu);\r\n","import React, { useState } from \"react\";\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport { LOGIN, HIDE_LOGIN, SHOW_LOGIN } from \"../../reducers/settings\";\r\nimport { RootState } from \"../../store\";\r\nimport Toast from \"../Toast\";\r\n\r\nconst mapState = (state: RootState) => {\r\n  return {\r\n    showLogin: state.settings.showLogin,\r\n  };\r\n};\r\n\r\nconst mapDispatch = (dispatch: Dispatch) => {\r\n  return {\r\n    login: (name: string) => dispatch({ type: LOGIN, payload: name }),\r\n    show: () => dispatch({ type: SHOW_LOGIN }),\r\n    hide: () => dispatch({ type: HIDE_LOGIN }),\r\n  };\r\n};\r\n\r\ninterface Props {\r\n  showLogin: boolean;\r\n  login(name: string): void;\r\n  hide(): void;\r\n  show(): void;\r\n}\r\n\r\nconst LoginDialog = (props: Props) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    props.hide();\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    props.hide();\r\n    props.login(name);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleToastClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.showLogin}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Welcome to the page, please type in your name to login.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            onChange={handleChange}\r\n            value={name}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleLogin} color=\"primary\">\r\n            Login\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Toast\r\n        open={open}\r\n        onClose={handleToastClose}\r\n        message=\"Login successfully\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(LoginDialog);\r\n","import React, { useState } from \"react\";\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Container,\r\n  Box,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { RootState } from \"../store\";\r\nimport { CartProduct, REMOVE_FROM_CART } from \"../reducers/cart\";\r\nimport { getCartItems } from \"../selectors\";\r\nimport Toast from \"../components/Toast\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  image: {\r\n    maxHeight: \"5em\",\r\n    marginRight: \"10px\",\r\n  },\r\n});\r\n\r\nconst mapState = (state: RootState) => {\r\n  return {\r\n    items: getCartItems(state),\r\n  };\r\n};\r\n\r\nconst mapDispatch = (dispatch: Dispatch) => {\r\n  return {\r\n    removeFromCart: (id: string) => dispatch({ type: REMOVE_FROM_CART, id }),\r\n  };\r\n};\r\n\r\ninterface Props {\r\n  items: CartProduct[] | undefined;\r\n  removeFromCart: (arg0: string) => void;\r\n}\r\n\r\nconst Cart = (props: Props) => {\r\n  const classes = useStyles();\r\n  const { items } = props;\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClick = (id: string) => {\r\n    props.removeFromCart(id);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleToastClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Box my={4}>\r\n        <Typography variant=\"h5\">Items in your cart</Typography>\r\n        <Box my={2}>\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Product</TableCell>\r\n                  <TableCell>Quantity</TableCell>\r\n                  <TableCell>Action</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {items && items.length > 0 ? (\r\n                  items.map((item) => (\r\n                    <TableRow key={item.productId}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <Box display=\"flex\" alignItems=\"center\">\r\n                          <img\r\n                            src={item.product?.thumbnail}\r\n                            className={classes.image}\r\n                            alt={item.product?.name}\r\n                          />\r\n                          <Link to={`/products/${item.productId}`}>\r\n                            {item.product?.name}\r\n                          </Link>\r\n                        </Box>\r\n                      </TableCell>\r\n                      <TableCell>{item.quantity}</TableCell>\r\n                      <TableCell>\r\n                        <Button\r\n                          onClick={() => {\r\n                            handleClick(item.productId);\r\n                          }}\r\n                          color=\"secondary\"\r\n                          variant=\"contained\"\r\n                        >\r\n                          Remove\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n                ) : (\r\n                  <TableRow>\r\n                    <TableCell colSpan={3}>\r\n                      <Typography variant=\"h6\" align=\"center\">\r\n                        No items yet, go shopping now!\r\n                      </Typography>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Box>\r\n        <Toast open={open} onClose={handleToastClose} message=\"Item removed\" />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(Cart);\r\n","import React, { useEffect } from \"react\";\nimport { Dispatch } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { makeStyles, Container } from \"@material-ui/core\";\nimport Homepage from \"./views/Home\";\nimport CategoryView from \"./views/CategoryView\";\nimport ProductView from \"./views/ProductView\";\nimport MenuBar from \"./components/Menu/MenuBar\";\nimport LeftMenu from \"./components/Menu/LeftMenu\";\nimport LoginDialog from \"./components/Menu/LoginDialog\";\n// import Copyright from \"./components/Copyright\";\nimport { INIT_PRODUCTS } from \"./reducers/products\";\nimport { INIT_CATEGORIES } from \"./reducers/categories\";\nimport Cart from \"./views/Cart\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBarSpacer: theme.mixins.toolbar,\n}));\n\nconst mapDispatch = (dispatch: Dispatch) => {\n  return {\n    initProducts: () => dispatch({ type: INIT_PRODUCTS }),\n    initCategories: () => dispatch({ type: INIT_CATEGORIES }),\n  };\n};\n\ninterface Props {\n  initProducts: () => void;\n  initCategories: () => void;\n}\n\nconst App = (props: Props) => {\n  const classes = useStyles();\n\n  // simulate api call on app start\n  useEffect(() => {\n    props.initProducts();\n    props.initCategories();\n  }, [props]);\n\n  return (\n    <Router>\n      <MenuBar />\n      <LeftMenu />\n      <LoginDialog />\n\n      <Container maxWidth=\"lg\">\n        <div className={classes.appBarSpacer}></div>\n        <Switch>\n          <Route path=\"/categories\" component={CategoryView} />\n          <Route path=\"/products\" component={ProductView} />\n          <Route path=\"/carts\" component={Cart} />\n          <Route path=\"/\">\n            <Homepage />\n          </Route>\n        </Switch>\n        {/* <Copyright /> */}\n      </Container>\n    </Router>\n  );\n};\n\nexport default connect(null, mapDispatch)(App);\n","import { red } from \"@material-ui/core/colors\";\r\nimport { createTheme } from \"@material-ui/core/styles\";\r\n\r\n// A custom theme for this app\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#556cd6\",\r\n    },\r\n    // secondary: {\r\n    //   main: \"#19857b\",\r\n    // },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: \"#fff\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport store from \"./store\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport App from \"./App\";\nimport theme from \"./theme\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}